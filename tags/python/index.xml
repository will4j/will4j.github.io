<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - 标签 - 程序员水王</title><link>https://will4j.github.io/tags/python/</link><description>Python - 标签 - 程序员水王</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>by 水王</copyright><lastBuildDate>Thu, 04 Jan 2024 10:11:49 +0800</lastBuildDate><atom:link href="https://will4j.github.io/tags/python/" rel="self" type="application/rss+xml"/><item><title>Python 工程化：Loguru 日志集成</title><link>https://will4j.github.io/posts/python-loguru-logging/</link><pubDate>Thu, 04 Jan 2024 10:11:49 +0800</pubDate><author>作者</author><guid>https://will4j.github.io/posts/python-loguru-logging/</guid><description>摘要 这篇文章综合考虑标准日志模块的统一接口以及 Loguru 日志框架的简便性，采用仅以标准日志模块作为日志门面，实际日志使用 Loguru 来输出的方案，并提供了方案的具体实现。通过这种方式，项目可以使用如 YAML 等纯文本配置文件进行日志配置，日志打印时只使用标准日志模块接口，使得业务代码和具体日志实现相隔离。 日志在开发中的地位不</description></item><item><title>Python 装饰器详解</title><link>https://will4j.github.io/posts/python-decorator-explained/</link><pubDate>Tue, 14 Nov 2023 14:05:42 +0800</pubDate><author>作者</author><guid>https://will4j.github.io/posts/python-decorator-explained/</guid><description>工欲善其事，必先利其器。—《论语·卫灵公》 本文从装饰器使用到的函数式编程特性入手，讨论了无参装饰器、有参装饰器以及类装饰器三种语法糖规则下装饰器的实现，另外扩展讨论了基于类的实现方式。 总结部分提供了一些实用装饰器的参考资料，后记部分是作者对设计的一些思考，以及行文过程中发现的一些历史事件、奇闻轶事。</description></item></channel></rss>